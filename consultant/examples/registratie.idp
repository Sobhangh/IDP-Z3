vocabulary environment {
  type location constructed from {Flemish_Region, Walloon_Region, Brussels_Region}
  type real_Estate_Type constructed from {Residential, Residential_Building_Land, Other_Real_Estate}
  type destination constructed from {As_Family_Dwelling, For_Resale, Community_Purpose, Social_Housing, Social_Renting, Other_House, No_House}
  type buyerType constructed from {Natural_Person, Legal_Person, Mixed}
  type calculationBase = {190; 200; 210; 220; 225}
  type baseLimit = {200; 220}
  type date = {2015..2025}
  type agreementDwellingForSocialRenting constructed from {Less_Than_9_years, More_than_9_Or_9_years}
  type transaction constructed from {Public_Sale, Out_Hand, Public_Sale_Community}
  type resale constructed from {Less_Than_Three, Three_Or_More}
  type seller constructed from {Vlaams_Woningfonds, Gelijksoortige_Rechtspersoon_EER, Mpy_Erkend_Door_VMSW, Vlaamse_Mpy_Voor_Sociaal_Wonen, ErkendeSocialeHuisvestingsMpy}

  Region : location

  // for Heritage
  Type_Of_Real_Estate : real_Estate_Type
  Monument
  Use : destination
  Heritage_Investment
  Heritage_Plan
  Additional_Terms

  // for Social_Dwelling
  Buyer : buyerType
  Seller : seller
  Mortgage_Loan_Allowance

  // For Professional_Purchase
  Professional_Buyer
  Professional_Declaration_Filed
  Guarantee_Satisfied
  Additional_Security_Required
  Additional_Security_Satisfied
  Resale : resale
  Transaction_Type : transaction
  Certification_Date_Sale : date

  // For Energy_Efficient_Dwelling
  Domicile_Established
  Clean_Purchase
  First_Ownership
  Causal_Connection
  Energy_Renovation_Planned
  Term_Energy_Renovation : date
  Certification_Date : date

  // For Dwelling_For_Social_Renting
  Start_Dt_Dwelling_For_Social_Rent : date
  Duration_Of_Agreement : agreementDwellingForSocialRenting

}

vocabulary decision {
  extern vocabulary environment
  
  type registration_Type constructed from {Family_Dwelling, Social_Dwelling, Social_Purpose, Exchange_Unbuilt_Ground, Professional_Purchase, Energy_Efficient_Dwelling, Heritage, Dwelling_For_Social_Renting, Other}
  type tax_Rate = {1; 2; 4; 6; 7; 10; 12}

  Tax : tax_Rate
  Registration_Type : registration_Type
}

theory environment:environment {
  { Professional_Buyer <-
      Professional_Declaration_Filed
      & Guarantee_Satisfied
      & (Additional_Security_Required & Additional_Security_Satisfied
      | ~ Additional_Security_Required)
      & Resale = Three_Or_More.
  }
}

theory decision:decision {

  { Tax = 1 <-
      Registration_Type = Heritage
      & Region = Flemish_Region.

    Tax = 2 <- // correct amount is 1.5
      Registration_Type = Social_Dwelling
      & Region = Flemish_Region.

    Tax = 4 <-
      Registration_Type = Professional_Purchase
      & Region = Flemish_Region.

    Tax = 6 <-
      (Registration_Type = Energy_Efficient_Dwelling
      | Registration_Type = Social_Purpose
      | Registration_Type = Exchange_Unbuilt_Ground)
      & Region = Flemish_Region.

    Tax = 7 <-
      (Registration_Type = Family_Dwelling
      | Registration_Type = Dwelling_For_Social_Renting)
      & Region = Flemish_Region.

    Tax = 10 <-
      Region = Flemish_Region
      & Registration_Type = Other.

    Tax = 12 <-
      Region = Brussels_Region
      | Region = Walloon_Region.
  }

  // registration types currently only defined for Flanders.
  // When a choice is made for walonia or brussels, types can still be entered with a view to expandability

  [An Heritage is a residential monument in an heritage plan (with additional terms), used as family dwelling]
  (Registration_Type = Heritage =>
      Type_Of_Real_Estate = Residential
      & Monument
      & Use = As_Family_Dwelling
      & Heritage_Investment
      & Heritage_Plan
      & Additional_Terms)
  .

  Registration_Type = Social_Dwelling =>     
      Buyer = Natural_Person
      & Type_Of_Real_Estate = Residential
      & Use = Social_Housing
      & (Seller = Vlaamse_Mpy_Voor_Sociaal_Wonen | Seller = ErkendeSocialeHuisvestingsMpy)
      & Mortgage_Loan_Allowance
  .

  Registration_Type = Professional_Purchase => 
      Professional_Buyer
      & Transaction_Type  ~= Public_Sale
      & Use = For_Resale
      & Certification_Date_Sale = Certification_Date + 8
  .

  Registration_Type = Energy_Efficient_Dwelling =>
      Type_Of_Real_Estate = Residential
      & Buyer = Natural_Person
      & Domicile_Established
      & Clean_Purchase
      & (First_Ownership | Causal_Connection)
      & Energy_Renovation_Planned
      & Term_Energy_Renovation = Certification_Date + 5
  .

  [A sale by the Vlaams Woning Fonds for community purpose is for social purpose.](
  Registration_Type = Social_Purpose =>     
      (Seller = Mpy_Erkend_Door_VMSW
      | Seller = Vlaams_Woningfonds
      | Seller = Gelijksoortige_Rechtspersoon_EER)
      & Use = Community_Purpose
  ).

  Registration_Type = Exchange_Unbuilt_Ground => 
      Additional_Terms
      & ~Monument.

  Registration_Type = Family_Dwelling =>
      Type_Of_Real_Estate = Residential
      & Buyer = Natural_Person
      & Domicile_Established
      & Clean_Purchase
      & (First_Ownership | Causal_Connection)
      & (~ Energy_Renovation_Planned | Term_Energy_Renovation ~= Certification_Date + 5)
  .

  Registration_Type = Dwelling_For_Social_Renting =>
      Type_Of_Real_Estate = Residential
      & Use = Social_Renting
      & Start_Dt_Dwelling_For_Social_Rent = Certification_Date + 3
      & Duration_Of_Agreement = Less_Than_9_years
  .

  Registration_Type = Other =>     // @EXPLAIN: Registration_Type cannot be Other
      Registration_Type ~= Family_Dwelling
      & Registration_Type ~= Social_Dwelling
      & Registration_Type ~= Energy_Efficient_Dwelling
      & Registration_Type ~= Dwelling_For_Social_Renting
      & Registration_Type ~= Heritage
      & Registration_Type ~= Professional_Purchase
      & Registration_Type ~= Social_Purpose
      & Registration_Type ~= Exchange_Unbuilt_Ground
  .

}

display {
    relevant(`Tax, `Registration_Type).
    goal(`Tax).
    view = normal.
    expand(`Registration_Type, `Tax).
}