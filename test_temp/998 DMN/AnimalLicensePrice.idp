

vocabulary {
	type Animalt_t := { Dog }
	Total: ()→Real
	Age: ()→Int
	Animal: ()→Animalt_t
	ViciousDog:() → Bool
	Sterilized:() → Bool
}
theory {
	//Animal License Price
	Total() = sum(lambda : if Age() < 6 & ~(Sterilized()) then 20.0 else 0.0)+sum(lambda : if Age() >= 6 & Sterilized() then 20.0 else 0)+sum(lambda : if Age() >= 6 & ~(Sterilized()) then 40.0 else 0.0)+sum(lambda : if Animal() = Dog & ViciousDog() then 100.0 else 0.0 ).
}


structure {
}
