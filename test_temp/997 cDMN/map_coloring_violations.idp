// https://dmcommunity.org/challenge-june-2019/

vocabulary {
	type Country_t := { Belgium, France, Luxembourg, Netherlands, Germany, Denmark }
	type Color_t := { Green, Red, Yellow }
	Color:(Country_t)→ Color_t
	Violations: ()→Int
	Country_borders_Country:(Country_t ⨯ Country_t) → Bool
}
theory {
	//Coloring
	!c1 in Country_t: !c2 in Country_t: c1 ~= Luxembourg & c2 ~= Luxembourg & Country_borders_Country(c1, c2) => Color(c1) ~= Color(c2).

	//Coloring Violations
	Violations() = sum(lambda : if Color(Luxembourg) = Color(France) then 257 else 0)+sum(lambda : if Color(Luxembourg) = Color(Germany) then 904 else 0)+sum(lambda : if Color(Luxembourg) = Color(Belgium) then 568 else 0).
}


structure {
	Country_borders_Country := {(Belgium,France), (Belgium,Luxembourg), (Belgium,Netherlands),( Belgium,Germany),
	(Netherlands,Germany), (Germany,France), (Germany,Denmark), (Germany,Luxembourg), (France,Luxembourg)}.
}
