vocabulary V {
  type person is {John,Bob,Marry} 
  type book is {B1}
  <ITemporal> owns : (person * book) -> Bool
  <Action> gives: (person * book * person) -> Bool
}

theory LTC T:V {

    {
        ! g in person, r in person, b in book: +[owns(r,b)] <- Now[gives(g,b,r)].
        ! g in person, r in person, b in book: -[owns(g,b)] <- Now[gives(g,b,r)] .
    }
    ! g in person, r in person, b in book: Now[gives(g,b,r)] => Now[owns(g,b)].
    #{ g in person, b in book, r in person : Now[gives(g,b,r)] } =< 1.
    
}


temporal_logic ltl:V {
    //(F owns(John,B1))
    //(EF owns(John,B1))
    (EF (owns(John,B1) and (EX owns(Bob,B1))) )
    //(EF (EG owns(John,B1)) ) 
}

structure S:V {
    I_owns := {(Bob,B1)}.
}

procedure main () {
    //pretty_print(ProveModalLogic(ltl,S,T,generate_transition_machine=True))
    //simulate(T,S)
    r1 = initialize(T,S)
    pretty_print(r1)
    r2 = progression(T,r1)
    pretty_print(r2)
}
