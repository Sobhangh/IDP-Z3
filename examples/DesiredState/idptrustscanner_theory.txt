theory T : V {

   {

       lastDay = MAX[:InstallDateType].
       lastVersion = MAX[:VersionType].
       !p,d,v[VersionType]: installedVersion( ITF(p, d, v) ) = v.
       !p,d[InstallDateType],v: installDate( ITF(p, d, v) ) = d.
       !p[InstallPCType],d,v: installedOn( ITF(p, d, v) ) = p.
   }
   {

       ! v, nextV : nextVersion( v ) = nextV <-
           min { I[InstallType], v2 :
                 installstate( I ) & installedVersion(I) = v2 & v2 > v : v2 }  = nextV.
       ! v : nextVersion( v ) = v + 1 <-
         ~? I, v2 : installstate( I ) & installedVersion(I) = v2 & v2 > v.
   }

   {
      // install started at
      ! ver : versionInstallStartDate( ver ) =
        min{ pc, day:
           installstate( ITF( pc, day, ver ) ) : day }.
      // install ended at
      ! ver : versionInstallEndDate( ver ) =
        max{ pc, day:
             installstate( ITF( pc, day, ver ) ) : day }.
   }

   {
      ! pc, ver : wasInstalledOnPC( pc, ver ) <-
         ? day : installstate( ITF( pc, day, ver ) ).
   }

   {
      // breach when upgrade 3 days after start of upgrade
      ! pc, day, ver : breach( pc, day,ver ) <-
                ? nextVer : installstate( ITF( pc, day, ver ) ) &
                nextVersion( ver ) = nextVer &
                versionInstallStartDate( nextVer ) + 3 = day .
    // &
    //      lastDayOnPC( pc, ver ) = dayr &
    //      dayr >= installDate(breachITF) .
   }


//   {
//      pcNextVersion( pc, ver ) = nextVer <-
//          wasInstalledOnPC( pc, ver ) &
//          nextDay = lastDayOnPC( pc, ver ) + 1 &
//          installstate( ITF( pc, nextDay, nextVer ) ).
//   }

   {
      ! pc, ver1, day : firstDayOnPC( pc, ver1 ) = day <-
          ? eday, ver2 : installstate( ITF( pc, day, ver1 ) ) &
          eday = day - 1 &
          installstate( ITF( pc, eday, ver2 ) ) & ver1~=ver2.
      ! pc, ver1 : firstDayOnPC( pc, ver1 ) = 0 <-
          installstate( ITF( pc, 0, ver1 ) ).
   }

   {
      ! pc, ver1, day : lastDayOnPC( pc, ver1 ) = day  <-
          ? eday, ver2 : installstate( ITF( pc, day, ver1 ) ) &
          eday = day + 1 &
          installstate( ITF( pc, eday, ver2 ) ) & ver1~=ver2.
      ! pc, ver1, day : lastDayOnPC( pc, ver1 ) = day  <-
          installstate( ITF( pc, day, ver1 ) ) &
          lastDay = day.
   }

   {
      !pc, day : riskDay( pc, day ) <-
         ? days : breach( pc, days, ver ) &
                  days =< day & day =< lastDayOnPC( pc, ver ).
   }

   {
      ! I : longRunBreach( I ) <-
         breach( installedOn(I), installDate(I), installedVersion(I) ) &
         lastDayOnPC( installedOn(I), installedVersion(I) ) - installDate(I) + 1 > 3 .
   }
}
