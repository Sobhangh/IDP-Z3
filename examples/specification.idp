vocabulary {
    type t_epoxy constructed from {e1, e2, e3}
    type t_cost = {0.539; 100}
    type t_color constructed from {amber, black_fluorescent, blackish_grey, None}
    type t_shelf_life = {0; 6; 12}
    type t_lowest_storage_t = {0; 15; 16}
    type t_highest_storage_t = {10; 25; 38}
    
    type params constructed from {cost, shelf_life, highest_storage_T, lowest_storage_T}
    Known_Param(params)
    
    Epoxy: t_epoxy
    
    // All predicates which signify if a value is known.
    Number_Unknown: int


    ECost(t_epoxy): t_cost
    Min_Cost: real
    Max_Cost: real
    [Slider: (Min_Cost, Max_Cost): (0.5, 1)]
    Cost: t_cost

    Min_Shelf_Life: real
    Max_Shelf_Life: real
    EShelf_Life(t_epoxy): t_shelf_life
    [Slider: (Min_Shelf_Life, Max_Shelf_Life): (0, 15)]
    Shelf_Life: t_shelf_life

    ELowest_Storage_T(t_epoxy): t_lowest_storage_t
    EHighest_Storage_T(t_epoxy): t_highest_storage_t
    Lowest_Storage_T: t_lowest_storage_t
    Highest_Storage_T: t_highest_storage_t 
    
    Min_Storage_T: real
    Max_Storage_T: real
    Min_Specific_Gravity_Resin: real

}


theory {
   
    
    Number_Unknown = #{p[params]: ~Known_Param(p)}.
    
    Known_Param(cost) <=> ECost(Epoxy) ~= 100. // Default t_cost is 100.
    Known_Param(cost) => Min_Cost =< ECost(Epoxy) =< Max_Cost.
    Cost = ECost(Epoxy).  

    Known_Param(shelf_life) <=> EShelf_Life(Epoxy) ~= 0.
    Known_Param(shelf_life) => Min_Shelf_Life =< EShelf_Life(Epoxy) =< Max_Shelf_Life.
    Shelf_Life = EShelf_Life(Epoxy).

    
    Known_Param(lowest_storage_T) <=> ELowest_Storage_T(Epoxy) ~= 0.
    Known_Param(highest_storage_T) <=> EHighest_Storage_T(Epoxy) ~= 0.
    [annotiatioooooooon]
    (ELowest_Storage_T(Epoxy) =< Min_Storage_T =< EHighest_Storage_T(Epoxy)).
    EHighest_Storage_T(Epoxy) >= Max_Storage_T >= ELowest_Storage_T(Epoxy).
    Lowest_Storage_T = ELowest_Storage_T(Epoxy).
    Highest_Storage_T = EHighest_Storage_T(Epoxy).
}

structure {
    ECost = {e1, 0.539} else 100
    EShelf_Life = {e1, 12; e2, 6;} else 0
    ELowest_Storage_T = {e1, 16; e2, 0; e3, 15} else 0
    EHighest_Storage_T = {e1, 38; e2, 10; e3, 25} else 0

}


