vocabulary environment {
  type Location constructed from {Flemish_Region, Walloon_Region, Brussels_Region}
  type Real_Estate_Type constructed from {Residential, Residential_Building_Land, Other_Real_Estate}
  type Destination constructed from {As_Family_Dwelling, For_Resale, Community_Purpose, Social_Housing, Social_Renting, Other_House, No_House}
  type Buyer_Type constructed from {Natural_Person, Legal_Person, Mixed}
  type Date = {2015..2025}
  type Agreement_Dwelling_For_Social_Renting constructed from {Less_Than_9_years, More_than_9_Or_9_years}
  type Transaction constructed from {Public_Sale, Out_Hand, Public_Sale_Community}
  type Resale constructed from {Less_Than_Three, Three_Or_More}
  type Seller constructed from {Vlaams_Woningfonds, Gelijksoortige_Rechtspersoon_EER, Mpy_Erkend_Door_VMSW, Vlaamse_Mpy_Voor_Sociaal_Wonen, ErkendeSocialeHuisvestingsMpy}

  region : Location

  // for Heritage
  type_of_real_estate : Real_Estate_Type
  monument
  use : Destination
  heritage_investment
  heritage_plan
  additional_terms

  // for Social_Dwelling
  buyer : Buyer_Type
  seller : Seller
  mortgage_loan_allowance

  // For Professional_Purchase
  professional_buyer
  professional_declaration_filed
  guarantee_satisfied
  additional_security_required
  additional_security_satisfied
  resale : Resale
  transaction_type : Transaction
  certification_date_sale : Date

  // For Energy_Efficient_Dwelling
  domicile_established
  clean_purchase
  first_ownership
  causal_connection
  energy_renovation_planned
  term_energy_renovation : Date
  certification_date : Date

  // For Dwelling_For_Social_Renting
  start_dt_dwelling_for_social_rent : Date
  duration_of_agreement : Agreement_Dwelling_For_Social_Renting

}

vocabulary decision {
  extern vocabulary environment

  type Registration_type constructed from {Family_Dwelling, Social_Dwelling, Social_Purpose, Exchange_Unbuilt_Ground, Professional_Purchase, Energy_Efficient_Dwelling, Heritage, Dwelling_For_Social_Renting, Other}
  type Tax_Rate = {1, 2, 4, 6, 7, 10, 12}

  tax : Tax_Rate
  registration_type : Registration_type
}

theory environment:environment {
  { professional_buyer ←
      professional_declaration_filed
      ∧ guarantee_satisfied
      ∧ (additional_security_required ∧ additional_security_satisfied
      ∨ ¬ additional_security_required)
      ∧ resale = Three_Or_More.
  }
}

theory decision:decision {

  { tax = 1 ←
      registration_type = Heritage
      ∧ region = Flemish_Region.

    tax = 2 ← // correct amount is 1.5
      registration_type = Social_Dwelling
      ∧ region = Flemish_Region.

    tax = 4 ←
      registration_type = Professional_Purchase
      ∧ region = Flemish_Region.

    tax = 6 ←
      (registration_type = Energy_Efficient_Dwelling
      ∨ registration_type = Social_Purpose
      ∨ registration_type = Exchange_Unbuilt_Ground)
      ∧ region = Flemish_Region.

    tax = 7 ←
      (registration_type = Family_Dwelling
      ∨ registration_type = Dwelling_For_Social_Renting)
      ∧ region = Flemish_Region.

    tax = 10 ←
      region = Flemish_Region
      ∧ registration_type = Other.

    tax = 12 ←
      region = Brussels_Region
      ∨ region = Walloon_Region.
  }

  // registration types currently only defined for Flanders.
  // When a choice is made for walonia or brussels, types can still be entered with a view to expandability

  [An Heritage is a residential monument in an heritage plan (with additional terms), used as family dwelling]
  (registration_type = Heritage ⇒
      type_of_real_estate = Residential
      ∧ monument
      ∧ use = As_Family_Dwelling
      ∧ heritage_investment
      ∧ heritage_plan
      ∧ additional_terms)
  .

  registration_type = Social_Dwelling ⇒
      buyer = Natural_Person
      ∧ type_of_real_estate = Residential
      ∧ use = Social_Housing
      ∧ (seller = Vlaamse_Mpy_Voor_Sociaal_Wonen ∨ seller = ErkendeSocialeHuisvestingsMpy)
      ∧ mortgage_loan_allowance
  .

  registration_type = Professional_Purchase ⇒
      professional_buyer
      ∧ transaction_type  ≠ Public_Sale
      ∧ use = For_Resale
      ∧ certification_date_sale = certification_date + 8
  .

  registration_type = Energy_Efficient_Dwelling ⇒
      type_of_real_estate = Residential
      ∧ buyer = Natural_Person
      ∧ domicile_established
      ∧ clean_purchase
      ∧ (first_ownership ∨ causal_connection)
      ∧ energy_renovation_planned
      ∧ term_energy_renovation = certification_date + 5
  .

  [A sale by the Vlaams Woning Fonds for community purpose is for social purpose.](
  registration_type = Social_Purpose ⇒
      (seller = Mpy_Erkend_Door_VMSW
      ∨ seller = Vlaams_Woningfonds
      ∨ seller = Gelijksoortige_Rechtspersoon_EER)
      ∧ use = Community_Purpose
  ).

  registration_type = Exchange_Unbuilt_Ground ⇒
      additional_terms
      ∧ ¬monument.

  registration_type = Family_Dwelling ⇒
      type_of_real_estate = Residential
      ∧ buyer = Natural_Person
      ∧ domicile_established
      ∧ clean_purchase
      ∧ (first_ownership ∨ causal_connection)
      ∧ (¬ energy_renovation_planned ∨ term_energy_renovation ≠ certification_date + 5)
  .

  registration_type = Dwelling_For_Social_Renting ⇒
      type_of_real_estate = Residential
      ∧ use = Social_Renting
      ∧ start_dt_dwelling_for_social_rent = certification_date + 3
      ∧ duration_of_agreement = Less_Than_9_years
  .

  registration_type = Other ⇒     // @EXPLAIN: registration_type cannot be Other
      registration_type ≠ Family_Dwelling
      ∧ registration_type ≠ Social_Dwelling
      ∧ registration_type ≠ Energy_Efficient_Dwelling
      ∧ registration_type ≠ Dwelling_For_Social_Renting
      ∧ registration_type ≠ Heritage
      ∧ registration_type ≠ Professional_Purchase
      ∧ registration_type ≠ Social_Purpose
      ∧ registration_type ≠ Exchange_Unbuilt_Ground
  .

}

display {
    relevant(`tax, `registration_type).
    goal(`tax).
    view = normal.
    expand(`registration_type, `tax).
}