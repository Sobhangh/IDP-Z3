vocabulary V {
    type name constructed from {triangle, quadrilateral}
    type subname constructed from
        { triangle_equilateral
        , right_triangle
        , rectangle
        , square
        , irregular}
    Name : name
    Subname : subname

    type sides = {3..4} isa nat
    Vertices: sides
    Sides: sides

    type side ={1..4} isa nat
    type dim = {1..2} isa nat
    Length(side):dim

    type perimeter = {1..8} isa nat
    Perimeter: perimeter

    type angle constructed from {sixtyDegree, ninetyDegree, other}
    Angle(side):angle

    Equilateral
}

theory T : V {
    Vertices=3 <=> Sides=3.
    Vertices=4 <=> Sides=4.
    Name=triangle      <=> Sides=3.
    Name=quadrilateral <=> Sides=4.

    // definition of Equilateral, Perimeter
    Equilateral <=> (!n[side]: n=<Sides => Length(n)=Length(1)).
    Perimeter = sum{n[side] : n=<Sides : Length(n)}.

    // triangle
    Subname=triangle_equilateral <=> Sides=3 & Equilateral.
    Subname=triangle_equilateral <=> Sides=3 & (!n[side]: n=<Sides => Angle(n)=sixtyDegree).
    Subname=right_triangle <=> Sides=3 & (?n[side]: n=<Sides & Angle(n)=ninetyDegree).

    // quadrilateral
    Subname=square | Subname=rectangle <=> Sides=4 & (!n[side]: n=<Sides => Angle(n)=ninetyDegree).
    Subname=rectangle => Length(1)=Length(3) & Length(2)=Length(4) & Length(1)~=Length(2).
    Subname=square => Sides=4 & Equilateral.
}


term MinPerimeter : V {
    Perimeter
}

structure S : V {
}
