vocabulary V {
    type nat := {1..3}
    type nat2 := {1..9}
    lcm : nat * nat -> nat //Int * Int â†’ Int
    c: () -> Int
}

theory T:V {

    {  ! n, m in nat: lcm(n,m) = min{{k | k in nat2: (? j1 in nat: k = j1 * n) & (? j1 in nat: k = j1 * m) }}. }

    c() = lcm(2, 3).
}

procedure main() {
    //print(Theory(T).formula())
    pretty_print(model_expand(T))
    pretty_print(Theory(T).explain())
}