vocabulary V {
    type Security := {BE001}
    A:() → Bool
    B:() → Bool
    C:() → Bool
    D:() → Bool
    E:() → Bool
    F:() → Bool
    G:() → Bool
    H:() → Bool
    I:() → Bool
    Eligible:(Security) → Bool
    NotEligible:(Security) → Bool
    Eligible1:(Security) → Bool
}

theory T:V {
    {
        !s: Eligible(s) <- ~NotEligible(s).
    }
    {
        !s: NotEligible(s) <- B() & C().
        !s: NotEligible(s) <- ~Eligible1(s).
    }
    {
        Eligible1(BE001) <- B() & E() & F().
    }
}

procedure main() {
	pretty_print(decision_table(T, goal_string="Eligible(BE001)", verify=True))
}