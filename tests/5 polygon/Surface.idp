vocabulary {

    type sides = {3..4}
    Sides: ()→sides
    Vertices: ()→sides


    type type constructed from {triangle, quadrilateral}
    Type : ()→type

    type side = {1..4}
    Length:(side)→Real
    Angle:(side)→Real

    type subtype constructed from
        { regular_triangle
        , right_triangle
        , rectangle
        , square
        , irregular}
    Subtype : ()→subtype

    Convex, Equilateral:() → Bool
    Perimeter:()→Real

    Large:(side) → Bool
    Base : ()→Real
    Height: ()→Real
    Surface:()→Real
}

theory {
    [All angles are 90°]
    (!n[side]: Angle(n)=90 | Sides < n).

    [Definition of triangle]
    (Type=triangle      <=> Sides=3).

    [Definition of rectangle]
    (Type=quadrilateral <=> Sides=4).

    [There are as many vertices as there are sides]
    ( (Vertices=3 <=> Sides=3) &
      (Vertices=4 <=> Sides=4)).

    [All triangles are convex]
    (Sides=3 => Convex).

    [Definition of Convex]
    (Convex <=> [All angles are below 180°]
                (∀n[side]: Angle(n)<180)).

    [Definition of Equilateral]
    (Equilateral <=> [All sides have the same length]
                     (∀n[side]: Length(n)=Length(1) | Sides < n)).

    [A triangle is regular, right, or irregular]
    ( Subtype=right_triangle | Subtype=regular_triangle | Subtype=irregular <= Sides=3).


    [A regular triangle is an equilateral triangle]
    (Subtype=regular_triangle <=> Sides=3 & Equilateral).

    [A regular triangle is a triangle where all angles are 60°]
    (Subtype=regular_triangle <=> Sides=3 & [All angles are 60°]
                                            (!n[side]: Angle(n)=60 | Sides < n)).

    [A right triangle is a triangle with a 90° angle]
    (Subtype=right_triangle   <=> Sides=3 & [One angle is 90°]
                                           (?n[side]: Angle(n)=90)).

    [All angles are 90° in squares and rectangles]
    (Subtype=square | Subtype=rectangle <=> Sides=4 & [All angles are 90°]
                                                     (!n[side]: Angle(n)=90 | Sides < n)).

    [In a rectangle, opposite side have the same length, and adjacent sides have different lengths]
    (Subtype=rectangle => Length(1)=Length(3) & Length(2)=Length(4) & Length(1)~=Length(2)).

    [A square is an equilateral quadrilateral]
    (Subtype=square    <=> Sides=4 & Equilateral).

    [In a triangle, no side is longer than the sum of the 2 other sides]
    ( Type=triangle => ( Length(1) =< Length(2) + Length(3))
                    &  ( Length(2) =< Length(3) + Length(1))
                    &  ( Length(3) =< Length(1) + Length(2))).

    // General constraints

    [The perimeter is the sum of the lengths of the sides]
    (Perimeter = sum{n[side] : true : Length(n)}).

    [The sum of the angles is 180° for a triangle, and 360° for a quadrilateral]
    (sum{n[side] : true : Angle(n)} = (Sides-2)*180).

    [Lengths are positive numbers]
    (!x[side]: 0 =< Length(x)).

    [Angles are positive numbers]
    (!x[side]: 0 =< Angle(x)).

    [Angles cannot be 180°]
    (!x[side]: Angle(x) ~= 180).

    [A polygon with N vertices has N angles]
    (!n[side]: Angle(n)=0 <=> Vertices<n ).

    [A polygon with N sides has N lengths]
    (!n[side]: Length(n)=0 <=> Sides<n).



    // TODO : surface
}

display {
    view = expanded.
}