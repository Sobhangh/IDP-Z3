
-- original ---------------------------------
vocabulary {
	type node := {a,b,c}
	edge: (node ⨯ node) → Bool
	symmetric_symbol: Symbol -> Bool
	symmetric: (Symbol) → Bool
}
theory {
    edge(a,b).
	{! s in Symbol: symmetric_symbol(s) ← arity(s)=2 ∧ input_domain(s,1) = input_domain(s,2). }
	// TODO use symmetric_symbol(`p)
    { !`p in Symbol: symmetric(`p) <- arity(`p)=2 ∧ input_domain(`p,1) = input_domain(`p,2) & (!x, y : $(`p)(x,y) => $(`p)(y,x)). }
	symmetric(`edge).
}
display {
	expand(`edge).
}
-- meta -------------------------------------
{'optionalPropagation': False,
 'symbols': [{'environmental': False,
              'idpname': 'edge',
              'priority': 'core',
              'showOptimize': True,
              'type': 'function',
              'view': 'expanded'},
             {'environmental': False,
              'idpname': 'symmetric_symbol',
              'priority': 'core',
              'showOptimize': True,
              'type': 'function',
              'view': 'normal'},
             {'environmental': False,
              'idpname': 'symmetric',
              'priority': 'core',
              'showOptimize': True,
              'type': 'function',
              'view': 'normal'}],
 'title': 'Interactive Consultant'}

-- propagation ------------------------------
{' Global': {'env_dec': False},
 'edge': {'__rank': 1,
          'edge(a, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, a)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(a, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, b)',
                         'relevant': True,
                         'status': 'UNIVERSAL',
                         'typ': 'Bool',
                         'value': True},
          'edge(a, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(b, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, a)',
                         'relevant': True,
                         'status': 'CONSEQUENCE',
                         'typ': 'Bool',
                         'value': True},
          'edge(b, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, b)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(b, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, a)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, b)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          '∀x,y ∈ None : edge(x, y) ⇒ edge(y, x)': {'environmental': False,
                                                    'is_assignment': False,
                                                    'normal': False,
                                                    'reading': '∀x,y ∈ None : edge(x, y) ⇒ edge(y, x)',
                                                    'relevant': True,
                                                    'status': 'CONSEQUENCE',
                                                    'typ': 'Bool',
                                                    'value': True}},
 'symmetric': {'__rank': 1,
               'symmetric(`Date)': {'environmental': False,
                                    'is_assignment': False,
                                    'normal': True,
                                    'reading': 'symmetric(`Date)',
                                    'relevant': False,
                                    'status': 'CONSEQUENCE',
                                    'typ': 'Bool',
                                    'value': False},
               'symmetric(`edge)': {'environmental': False,
                                    'is_assignment': False,
                                    'normal': True,
                                    'reading': 'symmetric(`edge)',
                                    'relevant': True,
                                    'status': 'UNIVERSAL',
                                    'typ': 'Bool',
                                    'value': True},
               'symmetric(`node)': {'environmental': False,
                                    'is_assignment': False,
                                    'normal': True,
                                    'reading': 'symmetric(`node)',
                                    'relevant': False,
                                    'status': 'CONSEQUENCE',
                                    'typ': 'Bool',
                                    'value': False},
               'symmetric(`symmetric)': {'environmental': False,
                                         'is_assignment': False,
                                         'normal': True,
                                         'reading': 'symmetric(`symmetric)',
                                         'relevant': False,
                                         'status': 'CONSEQUENCE',
                                         'typ': 'Bool',
                                         'value': False},
               'symmetric(`symmetric_symbol)': {'environmental': False,
                                                'is_assignment': False,
                                                'normal': True,
                                                'reading': 'symmetric(`symmetric_symbol)',
                                                'relevant': False,
                                                'status': 'CONSEQUENCE',
                                                'typ': 'Bool',
                                                'value': False}},
 'symmetric_symbol': {'__rank': 9999,
                      'symmetric_symbol(`Date)': {'environmental': False,
                                                  'is_assignment': False,
                                                  'normal': True,
                                                  'reading': 'symmetric_symbol(`Date)',
                                                  'relevant': False,
                                                  'status': 'CONSEQUENCE',
                                                  'typ': 'Bool',
                                                  'value': False},
                      'symmetric_symbol(`edge)': {'environmental': False,
                                                  'is_assignment': False,
                                                  'normal': True,
                                                  'reading': 'symmetric_symbol(`edge)',
                                                  'relevant': False,
                                                  'status': 'CONSEQUENCE',
                                                  'typ': 'Bool',
                                                  'value': True},
                      'symmetric_symbol(`node)': {'environmental': False,
                                                  'is_assignment': False,
                                                  'normal': True,
                                                  'reading': 'symmetric_symbol(`node)',
                                                  'relevant': False,
                                                  'status': 'CONSEQUENCE',
                                                  'typ': 'Bool',
                                                  'value': False},
                      'symmetric_symbol(`symmetric)': {'environmental': False,
                                                       'is_assignment': False,
                                                       'normal': True,
                                                       'reading': 'symmetric_symbol(`symmetric)',
                                                       'relevant': False,
                                                       'status': 'CONSEQUENCE',
                                                       'typ': 'Bool',
                                                       'value': False},
                      'symmetric_symbol(`symmetric_symbol)': {'environmental': False,
                                                              'is_assignment': False,
                                                              'normal': True,
                                                              'reading': 'symmetric_symbol(`symmetric_symbol)',
                                                              'relevant': False,
                                                              'status': 'CONSEQUENCE',
                                                              'typ': 'Bool',
                                                              'value': False}}}
