vocabulary {
	type node := {a,b,c}
	edge: (node ⨯ node) → Bool
	symmetric: Concept[node*node -> Bool] → Bool
}
theory {
    edge(a,b).
    { !`p in Concept[node*node -> Bool]: symmetric(`p) <- !x, y : $(`p)(x,y) => $(`p)(y,x). }
	symmetric(`edge).
}
display {
	expand := {`edge}.
}