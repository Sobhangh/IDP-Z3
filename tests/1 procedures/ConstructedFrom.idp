vocabulary V {
    type byte := {1,2}
    type color
    Color: () -> color
    opposite: color â†’ color
}

theory T:V {
    opposite(Color()) is enumerated.
}

structure S:V {
    color := constructed from {red, blue, green, rgb(R: byte, byte)}.
    opposite := {red-> green, rgb(1,1)-> red}.
}

procedure main() {
  pretty_print(Theory(T, S).formula())
  pretty_print(len(list(Theory(T,S).expand(max=1))))
}