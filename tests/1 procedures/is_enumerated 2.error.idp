vocabulary V {
    type color := {red, blue, green}
    Color: () → color
    opposite: (color) → color
    is_color: (color)→Bool

    type AB := {A, B}
    f: (AB*AB)→AB
}

structure S:V {
    opposite := {(red, green), (green, green)}
    f := {(A,A) -> A, (A,B) -> A, (B,A) -> B}
}

theory T3:V {
    is_color(red) is enumerated.
}

procedure main() {
    print("T3, S")
    pretty_print(model_expand(T3, S, sort=True))
}