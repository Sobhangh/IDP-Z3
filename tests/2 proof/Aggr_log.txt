
- calling Expression_substitute
- with_arguments:
    self:
      class: AEquivalence
      code: 'p ⇔ sum{c[color] : true : 1} = 3'
      str: p
    e0:
      class: Constructor
      code: 'true'
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: p
        str: p
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: p
      str: p
  - returning from substitute
  - calling Expression_substitute
  - with_arguments:
      self:
        class: AComparison
        code: 'sum{c[color] : true : 1} = 3'
        str: 'true'
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling Expression_substitute
    - with_arguments:
        self:
          class: AAggregate
          code: 'sum{c[color] : true : 1}'
          str: '3'
        e0:
          class: Constructor
          code: 'true'
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Constructor
            code: 'true'
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Constructor
            code: 'true'
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Constructor
            code: 'true'
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Constructor
              code: 'true'
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
    - output:
        class: AAggregate
        code: 'sum{c[color] : true : 1}'
        str: '3'
    - returning from Expression_substitute
    - calling Expression_substitute
    - with_arguments:
        self:
          class: NumberConstant
          code: '3'
          str: '3'
        e0:
          class: Constructor
          code: 'true'
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: NumberConstant
        code: '3'
        str: '3'
    - returning from Expression_substitute
  - output:
      class: AComparison
      code: 'sum{c[color] : true : 1} = 3'
      str: 'true'
  - returning from Expression_substitute
- output:
    class: AEquivalence
    code: 'p ⇔ sum{c[color] : true : 1} = 3'
    str: p
- returning from Expression_substitute
- calling Expression_substitute
- with_arguments:
    self:
      class: AEquivalence
      code: 'p ⇔ sum{c[color] : true : 1} = 3'
      str: p
    e0:
      class: Variable
      code: p
      str: p
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: p
        str: p
      e0:
        class: Variable
        code: p
        str: p
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: p
      str: 'true'
  - returning from substitute
  - calling Expression_substitute
  - with_arguments:
      self:
        class: AComparison
        code: 'sum{c[color] : true : 1} = 3'
        str: 'true'
      e0:
        class: Variable
        code: p
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling Expression_substitute
    - with_arguments:
        self:
          class: AAggregate
          code: 'sum{c[color] : true : 1}'
          str: '3'
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: IfExpr
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
          todo: '[]'
      - processing
        - calling Expression_substitute
        - with_arguments:
            self:
              class: Constructor
              code: 'true'
              str: 'true'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: Constructor
            code: 'true'
            str: 'true'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '1'
              str: '1'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '1'
            str: '1'
        - returning from Expression_substitute
        - calling Expression_substitute
        - with_arguments:
            self:
              class: NumberConstant
              code: '0'
              str: '0'
            e0:
              class: Variable
              code: p
              str: 'true'
            e1:
              class: Constructor
              code: 'true'
              str: 'true'
            todo: '[]'
        - processing
        - output:
            class: NumberConstant
            code: '0'
            str: '0'
        - returning from Expression_substitute
      - output:
          class: IfExpr
          code: '1'
          str: '1'
      - returning from Expression_substitute
    - output:
        class: AAggregate
        code: 'sum{c[color] : true : 1}'
        str: '3'
    - returning from Expression_substitute
    - calling Expression_substitute
    - with_arguments:
        self:
          class: NumberConstant
          code: '3'
          str: '3'
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: NumberConstant
        code: '3'
        str: '3'
    - returning from Expression_substitute
  - output:
      class: AComparison
      code: 'sum{c[color] : true : 1} = 3'
      str: 'true'
  - returning from Expression_substitute
- output:
    class: AEquivalence
    code: 'p ⇔ sum{c[color] : true : 1} = 3'
    str: 'true'
- returning from Expression_substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: 'true'
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: p
    str: 'true'
- returning from substitute
- calling Expression_substitute
- with_arguments:
    self:
      class: AComparison
      code: 'sum{c[color] : true : 1} = 3'
      str: 'true'
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
  - calling Expression_substitute
  - with_arguments:
      self:
        class: AAggregate
        code: 'sum{c[color] : true : 1}'
        str: '3'
      e0:
        class: Variable
        code: p
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
    - calling Expression_substitute
    - with_arguments:
        self:
          class: IfExpr
          code: '1'
          str: '1'
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
    - processing
      - calling Expression_substitute
      - with_arguments:
          self:
            class: Constructor
            code: 'true'
            str: 'true'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: Constructor
          code: 'true'
          str: 'true'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '0'
            str: '0'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '0'
          str: '0'
      - returning from Expression_substitute
    - output:
        class: IfExpr
        code: '1'
        str: '1'
    - returning from Expression_substitute
    - calling Expression_substitute
    - with_arguments:
        self:
          class: IfExpr
          code: '1'
          str: '1'
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
    - processing
      - calling Expression_substitute
      - with_arguments:
          self:
            class: Constructor
            code: 'true'
            str: 'true'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: Constructor
          code: 'true'
          str: 'true'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '0'
            str: '0'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '0'
          str: '0'
      - returning from Expression_substitute
    - output:
        class: IfExpr
        code: '1'
        str: '1'
    - returning from Expression_substitute
    - calling Expression_substitute
    - with_arguments:
        self:
          class: IfExpr
          code: '1'
          str: '1'
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
    - processing
      - calling Expression_substitute
      - with_arguments:
          self:
            class: Constructor
            code: 'true'
            str: 'true'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: Constructor
          code: 'true'
          str: 'true'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '1'
            str: '1'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '1'
          str: '1'
      - returning from Expression_substitute
      - calling Expression_substitute
      - with_arguments:
          self:
            class: NumberConstant
            code: '0'
            str: '0'
          e0:
            class: Variable
            code: p
            str: 'true'
          e1:
            class: Constructor
            code: 'true'
            str: 'true'
      - processing
      - output:
          class: NumberConstant
          code: '0'
          str: '0'
      - returning from Expression_substitute
    - output:
        class: IfExpr
        code: '1'
        str: '1'
    - returning from Expression_substitute
  - output:
      class: AAggregate
      code: 'sum{c[color] : true : 1}'
      str: '3'
  - returning from Expression_substitute
  - calling Expression_substitute
  - with_arguments:
      self:
        class: NumberConstant
        code: '3'
        str: '3'
      e0:
        class: Variable
        code: p
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
  - output:
      class: NumberConstant
      code: '3'
      str: '3'
  - returning from Expression_substitute
- output:
    class: AComparison
    code: 'sum{c[color] : true : 1} = 3'
    str: 'true'
- returning from Expression_substitute
- '

  Z3 propagation ********************************'