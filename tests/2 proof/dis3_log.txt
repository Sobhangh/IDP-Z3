
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: p
    e0:
      class: Constructor
      code: 'true'
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
- output:
    class: Variable
    code: p
    str: p
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(p) ∨ q
      str: ~(p) ∨ q
    e0:
      class: Constructor
      code: 'true'
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(p)
        str: ~(p)
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: p
          str: p
        e0:
          class: Constructor
          code: 'true'
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: p
        str: p
    - returning from substitute
  - output:
      class: AUnary
      code: ~(p)
      str: ~(p)
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: q
        str: q
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: q
      str: q
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(p) ∨ q
    str: ~(p) ∨ q
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(q) ∨ r
      str: ~(q) ∨ r
    e0:
      class: Constructor
      code: 'true'
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(q)
        str: ~(q)
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: q
          str: q
        e0:
          class: Constructor
          code: 'true'
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: q
        str: q
    - returning from substitute
  - output:
      class: AUnary
      code: ~(q)
      str: ~(q)
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: r
        str: r
      e0:
        class: Constructor
        code: 'true'
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: r
      str: r
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(q) ∨ r
    str: ~(q) ∨ r
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: p
    e0:
      class: Variable
      code: p
      str: p
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
- output:
    class: Variable
    code: p
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(p) ∨ q
      str: ~(p) ∨ q
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(p)
        str: ~(p)
      e0:
        class: Variable
        code: p
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: p
          str: p
        e0:
          class: Variable
          code: p
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: p
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(p)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: q
        str: q
      e0:
        class: Variable
        code: p
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: q
      str: q
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(p) ∨ q
    str: q
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(p) ∨ q
      str: q
    e0:
      class: Variable
      code: q
      str: q
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(p)
        str: 'false'
      e0:
        class: Variable
        code: q
        str: q
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: p
          str: 'true'
        e0:
          class: Variable
          code: q
          str: q
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
    - processing
    - output:
        class: Variable
        code: p
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(p)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: q
        str: q
      e0:
        class: Variable
        code: q
        str: q
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
  - output:
      class: Variable
      code: q
      str: 'true'
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(p) ∨ q
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: 'true'
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: p
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: q
      str: 'true'
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: q
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: r
      str: r
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: r
    str: r
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: s
      str: s
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: s
    str: s
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: t
      str: t
    e0:
      class: Variable
      code: p
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: t
    str: t
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(p) ∨ q
      str: 'true'
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(p)
        str: 'false'
      e0:
        class: Variable
        code: q
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: p
          str: 'true'
        e0:
          class: Variable
          code: q
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: p
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(p)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: q
        str: 'true'
      e0:
        class: Variable
        code: q
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: q
      str: 'true'
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(p) ∨ q
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(q) ∨ r
      str: ~(q) ∨ r
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(q)
        str: ~(q)
      e0:
        class: Variable
        code: q
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: q
          str: q
        e0:
          class: Variable
          code: q
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: q
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(q)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: r
        str: r
      e0:
        class: Variable
        code: q
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: r
      str: r
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(q) ∨ r
    str: r
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(q) ∨ r
      str: r
    e0:
      class: Variable
      code: r
      str: r
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(q)
        str: 'false'
      e0:
        class: Variable
        code: r
        str: r
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: q
          str: 'true'
        e0:
          class: Variable
          code: r
          str: r
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
    - processing
    - output:
        class: Variable
        code: q
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(q)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: r
        str: r
      e0:
        class: Variable
        code: r
        str: r
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
  - processing
  - output:
      class: Variable
      code: r
      str: 'true'
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(q) ∨ r
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: 'true'
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: p
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: q
      str: 'true'
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: q
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: r
      str: 'true'
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: r
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: s
      str: s
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: s
    str: s
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: t
      str: t
    e0:
      class: Variable
      code: q
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: t
    str: t
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: ADisjunction
      code: ~(q) ∨ r
      str: 'true'
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
    todo: '[]'
- processing
  - calling substitute
  - with_arguments:
      self:
        class: AUnary
        code: ~(q)
        str: 'false'
      e0:
        class: Variable
        code: r
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
    - calling substitute
    - with_arguments:
        self:
          class: Variable
          code: q
          str: 'true'
        e0:
          class: Variable
          code: r
          str: 'true'
        e1:
          class: Constructor
          code: 'true'
          str: 'true'
        todo: '[]'
    - processing
    - output:
        class: Variable
        code: q
        str: 'true'
    - returning from substitute
  - output:
      class: AUnary
      code: ~(q)
      str: 'false'
  - returning from substitute
  - calling substitute
  - with_arguments:
      self:
        class: Variable
        code: r
        str: 'true'
      e0:
        class: Variable
        code: r
        str: 'true'
      e1:
        class: Constructor
        code: 'true'
        str: 'true'
      todo: '[]'
  - processing
  - output:
      class: Variable
      code: r
      str: 'true'
  - returning from substitute
- output:
    class: ADisjunction
    code: ~(q) ∨ r
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: p
      str: 'true'
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: p
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: q
      str: 'true'
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: q
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: r
      str: 'true'
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: r
    str: 'true'
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: s
      str: s
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: s
    str: s
- returning from substitute
- calling substitute
- with_arguments:
    self:
      class: Variable
      code: t
      str: t
    e0:
      class: Variable
      code: r
      str: 'true'
    e1:
      class: Constructor
      code: 'true'
      str: 'true'
- processing
- output:
    class: Variable
    code: t
    str: t
- returning from substitute
- '

  Z3 propagation ********************************'