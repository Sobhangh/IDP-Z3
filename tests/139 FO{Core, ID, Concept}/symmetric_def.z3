
-- original ---------------------------------
vocabulary {
	type node := {a,b,c}
	edge: (node ⨯ node) → Bool
	symmetric: Concept[node*node -> Bool] → Bool
	var x in node
	var y in node
}
theory {
    edge(a,b).
    { !`p in Concept[node*node -> Bool]: symmetric(`p) <- !x, y : $(`p)(x,y) => $(`p)(y,x). }
	symmetric(`edge).
}
display {
	expand := {`edge}.
}
-- meta -------------------------------------
{'manualPropagation': False,
 'manualRelevance': False,
 'optionalPropagation': False,
 'optionalRelevance': False,
 'symbols': [{'environmental': False,
              'idpname': 'edge',
              'priority': 'core',
              'showOptimize': True,
              'type': 'function',
              'view': 'expanded'},
             {'environmental': False,
              'idpname': 'symmetric',
              'priority': 'core',
              'showOptimize': True,
              'type': 'function',
              'view': 'normal'}],
 'title': 'Interactive Consultant'}

-- propagation ------------------------------
{' Global': {'env_dec': False},
 'edge': {'edge(a, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, a)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(a, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, b)',
                         'relevant': True,
                         'status': 'UNIVERSAL',
                         'typ': 'Bool',
                         'value': True},
          'edge(a, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(a, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(b, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, a)',
                         'relevant': True,
                         'status': 'UNIVERSAL',
                         'typ': 'Bool',
                         'value': True},
          'edge(b, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, b)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(b, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(b, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, a)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, a)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, b)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, b)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          'edge(c, c)': {'environmental': False,
                         'is_assignment': False,
                         'normal': True,
                         'reading': 'edge(c, c)',
                         'relevant': True,
                         'status': 'UNKNOWN',
                         'typ': 'Bool'},
          '∀ x ∈ node,y ∈ node: edge(x, y) ⇒ edge(y, x)': {'environmental': False,
                                                           'is_assignment': False,
                                                           'normal': False,
                                                           'reading': '∀ x ∈ node,y ∈ node: edge(x, y) ⇒ edge(y, x)',
                                                           'relevant': False,
                                                           'status': 'UNIVERSAL',
                                                           'typ': 'Bool',
                                                           'value': True}},
 'symmetric': {'symmetric(`edge)': {'environmental': False,
                                    'is_assignment': False,
                                    'normal': True,
                                    'reading': 'symmetric(`edge)',
                                    'relevant': True,
                                    'status': 'UNIVERSAL',
                                    'typ': 'Bool',
                                    'value': True}}}
