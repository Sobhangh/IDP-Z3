vocabulary V {
    type T ≜ {a, b}
    Q: T → 𝔹
    p : T → 𝔹
    f : T ⨯ T → T (domain: Q ⨯ p)
}

theory T:V {
    Q(a) ∧ p(a) & f(a,a)=a.
    !x in T: Q(x) & p(x) => f(x,x)=x.
    !x in T: Q(x) => ! y in T: p(y) => f(x, y) = x.
    ?x in T: Q(x) & ! y in T: p(y) => f(x, y) = x.
}

procedure main() {
    Th = Theory(T)
    print("Formula: ")
    pretty_print(Th.formula())
    print("WDF: ")
    pretty_print(Th.WDFs)
}

