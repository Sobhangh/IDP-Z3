vocabulary V {
    type byte ≜ {1,2}
    type color
    Color: () -> color
    opposite: color → color
}

theory T:V {
    opposite(Color()) is enumerated.
}

structure S:V {
    color ≜ constructed from {red, blue, green, rgb(R: byte, byte)}.
    opposite ⊇ {red-> green, (rgb(1,1))-> rgb(1,2)}.
}

procedure main() {
    Th = Theory(T, S)
    print("Formula: ")
    pretty_print(Th.formula())
    print("WDF: ")
    pretty_print(Th.WDFs)
    pretty_print(model_expand(T, S))
}