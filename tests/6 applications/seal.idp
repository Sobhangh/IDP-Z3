vocabulary environment {
    Depth : ()→Real
}
vocabulary decision {
    import environment

    type csid := {b, c, d, e, f}
    cSID : ()→csid
    measure: Concept[()→csid] -> Bool
}
theory environment:environment {}
theory decision:decision {
     cSID() = b ⇔ 2.104 ≤ Depth() ≤ 2.476.
     cSID() = c ⇔ 2.768 ≤ Depth() ≤ 3.391.
     cSID() = d ⇔ 4.294 ≤ Depth() ≤ 5.206.
     cSID() = e ⇔ 5.474 ≤ Depth() ≤ 6.686.
     cSID() = f ⇔ 8.312 ≤ Depth() ≤ 10.748.
}

structure S:decision {
    measure := {`cSID}.
}
procedure main() {
    print(Theory(decision, S).formula())
    pretty_print(model_check(decision, S))
}

