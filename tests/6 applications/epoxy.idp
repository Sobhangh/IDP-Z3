vocabulary {
    type t_epoxy constructed from {e1, e2, e3}
    type t_cost = {0.539; -1}
    type t_safe_low_storage_t = {0; 15; 16}
    type t_safe_high_storage_t = {10; 25; 38}
    

    KnownCost
    KnownHighStorageT
    KnownLowStorageT
    
    Epoxy: t_epoxy
    
    
    ECost(t_epoxy): t_cost
    Min_Cost: real
    Max_Cost: real
    [Slider: (Min_Cost, Max_Cost): (0.2, 1)]
    Cost: t_cost

    Min_Storage_T: real
    Max_Storage_T: real

    ELowest_Storage_T(t_epoxy): t_safe_low_storage_t
    EHighest_Storage_T(t_epoxy): t_safe_high_storage_t 
    [Slider: (Min_Storage_T, ): (-25, 25)]
    Safe_Low_Storage_T: t_safe_low_storage_t
    [Slider: ( , Max_Storage_T): (-25, 25)]
    Safe_High_Storage_T: t_safe_high_storage_t 
    


}

theory {
    KnownCost <=> ECost(Epoxy) ~= -1. // Default t_cost is -1.
    KnownCost => Min_Cost =< ECost(Epoxy) =< Max_Cost.
    Cost = ECost(Epoxy).  

    KnownLowStorageT <=> ELowest_Storage_T(Epoxy) ~= -900. 
    KnownHighStorageT <=> EHighest_Storage_T(Epoxy) ~= -900.

    ELowest_Storage_T(Epoxy) =< Min_Storage_T =< EHighest_Storage_T(Epoxy).
    EHighest_Storage_T(Epoxy) >= Max_Storage_T >= ELowest_Storage_T(Epoxy).
    Safe_Low_Storage_T = ELowest_Storage_T(Epoxy).
    Safe_High_Storage_T = EHighest_Storage_T(Epoxy).
}

structure {
    ECost = {e1, 0.539} else -1
    ELowest_Storage_T = {e1, 16; e2, 0; e3, 15} else -900
    EHighest_Storage_T = {e1, 38; e2, 10; e3, 25} else -900

}
 
structure default {
    Max_Storage_T = {23} // room temperature
}

display {
    hide(`Max_Storage_T, `Min_Storage_T).
}
